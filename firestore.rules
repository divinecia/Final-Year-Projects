rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/admin/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(resource) {
      return isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // Allow authenticated users to read and write their own data
    match /households/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /workers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /admin/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /jobs/{jobId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /applications/{applicationId} {
      allow read, write: if isAuthenticated();
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }
    
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated();
    }
    
    match /payments/{paymentId} {
      allow read, write: if isAuthenticated();
    }
    
    match /reviews/{reviewId} {
      allow read, write: if isAuthenticated();
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if true;
    }
  }
}
